@model StatisticModel
@{
	ViewData["title"] = "Dashboard";
}
<!DOCTYPE html>
<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title>Dashboard</title>
</head>
<body>
	<h3>Dashboard Statistic</h3>
	<div class="row">
		<div class="col-md-3">
			<p>Product</p>
			@ViewBag.CountProduct
		</div>
		<div class="col-md-3">
			<p>Orders</p>
			@ViewBag.CountOrder
		</div>
		<div class="col-md-3">
			<p>Category</p>
			@ViewBag.CountCategory
		</div>
		<div class="col-md-3">
			<p>User</p>
			@ViewBag.CountUser
		</div>
	</div>
	<div class="container">
		<div class="row">
			<div class="col-md-3">
				<h4>Filter Data: </h4>
				<select class="filter-select">
					<option value="30">--Filter Data--</option>
					<option value="7">7 days ago</option>
					<option value="30">A month ago</option>
					<option value="90">3 months ago</option>
					<option value="365">A year ago</option>
				</select>
			</div>
			<div class="col-md-3">
				<h4>Option: </h4>
				<label>From</label>
				<input type="date" class="form-control" id="date_from" asp-for="@Model.DateCreated"/>
				<label>To</label>
				<input type="date" class="form-control" id="date_to" asp-for="@Model.DateCreated" />
				<button id="filterButton" class="btn btn-primary">Filter</button>
			</div>
		</div>
		<div class="row">
			<h4>Chart</h4>
			<div id="myfirstchart" style="height: 250px;"></div>
		</div>
	</div>

</body>
@section Scripts {
	<script>
		$(document).ready(function () {
			var ChartMorris = new Morris.Line({
				// ID of the element in which to draw the chart.
				element: 'myfirstchart',
				// Chart data records -- each entry in this array corresponds to a point on
				// the chart.
				data: [],

				// The name of the data record attribute that contains x-values.
				xkey: 'date',
				// xLabelFormat: function (x) {
				// 	return new Date(x).toLocaleDateString();
				// },
				// A list of names of data record attributes that contain y-values.
				ykeys: ['sold', 'quantity', 'revenue', 'profit'],
				// Labels for the ykeys -- will be displayed when you hover over the
				// chart.
				labels: ['Số lượng bán ra', 'Đơn hàng', 'Doanh thu', 'Lợi nhuận']
			});

			$.ajax({
				url: "@Url.Action("GetChartData", "Dashboard")",
				type: "POST",
				dataType: "json",
				success: function (data) {
					if (data) {
						ChartMorris.setData(data.map(function (item) {
							return {
								date: item.date,
								sold: item.sold,
								quantity: item.quantity,
								revenue: item.revenue,
								profit: item.profit
							};
						}));
					} else {
						console.warn("No data received for Chart update");
						ChartMorris.setData([]);
					}
				}, 
				error: function (error) {
					console.error("Error fetching data: ", error);
				}
			});

			$('.filter-select').on('change', function () {
				var days = $(this).val();
				var endDate = new Date();
				var startDate = new Date(endDate.getTime() - days * 24 * 60  * 60 * 1000);

				$.ajax({
					url: "@Url.Action("GetChartDataBySelect", "Dashboard")",
					type: 'POST',
					dataType: "json",
					data: {
						startDate: startDate.toISOString().split('T')[0],
						endDate: endDate.toISOString().split('T')[0]
					},
					success: function (data) {
						if (data) {
							ChartMorris.setData(data.map(function (item) {
								return {
									date: item.date,
									sold: item.sold,
									quantity: item.quantity,
									revenue: item.revenue,
									profit: item.profit
								};
							}));
						} else {
							console.warn("No data received for chart update. ");
							ChartMorris.setData([]);
						}
					},
					error: function (error) {
						console.error("Error fetching data: ", error);
					}
				});
			});
			
			// filter by option
			$("#filterButton").click(function () {
				var fromDate = $("#date_from").val();
				var toDate = $("#date_to").val();

				$.ajax({
					url: "@Url.Action("FilterData", "Dashboard")",
					data: { fromDate: fromDate, toDate: toDate },
					type: "POST",
					success: function (data) {
						if (data) {
							ChartMorris.setData(data.map(function (item) {
								return {
									date: item.date,
									sold: item.sold,
									quantity: item.quantity,
									revenue: item.revenue,
									profit: item.profit
								};
							}));
						} else {
							console.warn("No data received for chart update. ");
							ChartMorris.setData([]);
						}
					},
					error: function (error) {
						console.error("Error fetching data: ", error);
					}
				});
			});
		});
	</script>
	}
</html>
